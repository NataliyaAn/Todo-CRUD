{"version":3,"sources":["utils/fetchClient.ts","types/SortFilter.ts","api/users.ts","components/Auth/AuthForm.tsx","components/Auth/AuthContext.tsx","components/Error.tsx","components/Filter.tsx","types/KeySubmit.ts","types/MessageError.ts","components/TodoItem.tsx","components/HeaderInputForm.tsx","api/todos.ts","App.tsx","index.tsx"],"names":["BASE_URL","wait","delay","Promise","resolve","setTimeout","request","url","method","data","options","body","JSON","stringify","headers","then","fetch","response","ok","Error","json","SortFilter","client","getUserByEmail","email","a","users","createUser","name","AuthForm","onLogin","useState","setEmail","setName","needToRegister","setNeedToRegister","loading","setLoading","errorMessage","setErrorMessage","saveUser","user","localStorage","setItem","useEffect","userData","getItem","parse","error","loadUser","handleSubmit","event","preventDefault","onSubmit","className","htmlFor","classNames","type","id","placeholder","disabled","value","required","onChange","e","target","minLength","AuthContext","React","createContext","AuthProvider","children","setUser","Provider","isError","setError","messageError","data-cy","hidden","aria-label","onClick","KeySubmit","MessageError","Filter","sortFilter","handleChangeSortFilter","href","selected","all","active","completed","TodoItem","todo","handleUpdate","wantChangeTitle","setWantChangeTitle","changeTodoTitle","setChangeTitle","handleKeyChangeTitle","handleRemoveTodo","activeTodoId","changeTodoField","useRef","current","focus","checked","ref","onBlur","onKeyDown","onDoubleClick","title","includes","HeaderInputForm","newTodoTitle","setTitle","newTodoField","createTodo","userId","deleteTodo","updateTodo","todoID","App","useContext","todos","setTodos","setSortFilter","visibelTodos","setVisibelTodos","filter","completedTodos","setCompletedTodos","setMessageError","setActiveTodoId","catch","ErrorServerOnStart","useMemo","trim","length","ErrorEmptyTitle","visibleTodos","isAdding","PrevTodos","removeTodoID","idActive","Prevtodos","ErrorServerWhileDelete","changeTodo","map","ErrorServerWhileUpdate","key","Enter","Escape","state","forEach","statusComleted","sort","todoComleted","Root","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.b1638f72.chunk.js","sourcesContent":["const BASE_URL = 'https://mate.academy/students-api';\n\n// a promise resolved after a given delay\nfunction wait(delay: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\n// To have autocompletion and avoid mistypes\ntype RequestMethod = 'GET' | 'POST' | 'PATCH' | 'DELETE';\n\nfunction request<T>(\n  url: string,\n  method: RequestMethod = 'GET',\n  data: any = null, // we can send any data to the server\n): Promise<T> {\n  const options: RequestInit = { method };\n\n  if (data) {\n    // We add body and Content-Type only for the requests with data\n    options.body = JSON.stringify(data);\n    options.headers = {\n      'Content-Type': 'application/json; charset=UTF-8',\n    };\n  }\n\n  // we wait for testing purpose to see loaders\n  return wait(300)\n    .then(() => fetch(BASE_URL + url, options))\n    .then(response => {\n      if (!response.ok) {\n        throw new Error();\n      }\n\n      return response.json();\n    });\n}\n\nexport const client = {\n  get: <T>(url: string) => request<T>(url),\n  post: <T>(url: string, data: any) => request<T>(url, 'POST', data),\n  patch: <T>(url: string, data: any) => request<T>(url, 'PATCH', data),\n  delete: (url: string) => request(url, 'DELETE'),\n};\n","// eslint-disable-next-line no-shadow\nexport enum SortFilter {\n  all = 'all',\n  completed = 'completed',\n  active = 'active',\n}\n","import { User } from '../types/User';\nimport { client } from '../utils/fetchClient';\n\nexport const getUserByEmail = async (email: string) => {\n  const users = await client.get<User[]>(`/users?email=${email}`);\n\n  return users[0] || null;\n};\n\ntype UserData = Pick<User, 'name' | 'email'>;\n\nexport const createUser = async ({ email, name }: UserData) => {\n  return client.post<User>('/users', { email, name });\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport classNames from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport { createUser, getUserByEmail } from '../../api/users';\nimport { User } from '../../types/User';\n\nexport type Props = {\n  onLogin: (user: User) => void,\n};\n\nexport const AuthForm: React.FC<Props> = ({ onLogin }) => {\n  const [email, setEmail] = useState('');\n  const [name, setName] = useState('');\n  const [needToRegister, setNeedToRegister] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const saveUser = (user: User) => {\n    localStorage.setItem('user', JSON.stringify(user));\n    onLogin(user);\n  };\n\n  useEffect(() => {\n    const userData = localStorage.getItem('user');\n\n    if (!userData) {\n      return;\n    }\n\n    try {\n      const user = JSON.parse(userData) as User;\n\n      onLogin(user);\n    } catch (error) {\n      // Need to login\n    }\n  }, []);\n\n  const loadUser = async () => {\n    const user = await getUserByEmail(email);\n\n    if (user) {\n      saveUser(user);\n    } else {\n      setNeedToRegister(true);\n    }\n  };\n\n  const registerUser = () => {\n    return createUser({ name, email })\n      .then(saveUser);\n  };\n\n  const handleSubmit = async (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setErrorMessage('');\n    setLoading(true);\n\n    try {\n      if (needToRegister) {\n        await registerUser();\n      } else {\n        await loadUser();\n      }\n    } catch (error) {\n      setErrorMessage('Something went wrtong');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"box mt-5\">\n      <h1 className=\"title is-3\">\n        {needToRegister ? 'You need to register' : 'Log in to open todos'}\n      </h1>\n\n      <div className=\"field\">\n        <label className=\"label\" htmlFor=\"user-email\">\n          Email\n        </label>\n\n        <div\n          className={classNames('control has-icons-left', {\n            'is-loading': loading,\n          })}\n        >\n          <input\n            type=\"email\"\n            id=\"user-email\"\n            className={classNames('input', {\n              'is-danger': !needToRegister && errorMessage,\n            })}\n            placeholder=\"Enter your email\"\n            disabled={loading || needToRegister}\n            value={email}\n            required\n            onChange={e => setEmail(e.target.value)}\n          />\n\n          <span className=\"icon is-small is-left\">\n            <i className=\"fas fa-envelope\" />\n          </span>\n        </div>\n\n        {!needToRegister && errorMessage && (\n          <p className=\"help is-danger\">{errorMessage}</p>\n        )}\n      </div>\n\n      {needToRegister && (\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"user-name\">\n            Your Name\n          </label>\n\n          <div\n            className={classNames('control has-icons-left', {\n              'is-loading': loading,\n            })}\n          >\n            <input\n              type=\"text\"\n              id=\"user-name\"\n              className={classNames('input', {\n                'is-danger': needToRegister && errorMessage,\n              })}\n              placeholder=\"Enter your name\"\n              required\n              minLength={4}\n              disabled={loading}\n              value={name}\n              onChange={e => setName(e.target.value)}\n            />\n\n            <span className=\"icon is-small is-left\">\n              <i className=\"fas fa-user\" />\n            </span>\n          </div>\n\n          {needToRegister && errorMessage && (\n            <p className=\"help is-danger\">{errorMessage}</p>\n          )}\n        </div>\n      )}\n\n      <div className=\"field\">\n        <button\n          type=\"submit\"\n          className={classNames('button is-primary', {\n            'is-loading': loading,\n          })}\n        >\n          {needToRegister ? 'Register' : 'Login'}\n        </button>\n      </div>\n    </form>\n  );\n};\n","import React, { useState } from 'react';\nimport { User } from '../../types/User';\nimport { AuthForm } from './AuthForm';\n\nexport const AuthContext = React.createContext<User | null>(null);\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const AuthProvider: React.FC<Props> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  if (!user) {\n    return <AuthForm onLogin={setUser} />;\n  }\n\n  return (\n    <AuthContext.Provider value={user}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\n\ntype Props = {\n  isError: boolean;\n  setError: (error: boolean) => void;\n  messageError: string;\n};\n\nexport const Error: React.FC<Props> = ({\n  isError,\n  setError,\n  messageError,\n}) => {\n  if (isError) {\n    setTimeout(() => {\n      setError(false);\n    }, 3000);\n  }\n\n  return (\n    <div\n      data-cy=\"ErrorNotification\"\n      className={classNames(\n        'notification',\n        'is-danger',\n        'is-light',\n        'has-text-weight-normal',\n        { hidden: !isError },\n      )}\n    >\n      <button\n        data-cy=\"HideErrorButton\"\n        aria-label=\"close message error\"\n        type=\"button\"\n        className=\"delete\"\n        onClick={() => setError(false)}\n      />\n\n      {messageError}\n    </div>\n\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { SortFilter } from '../types/SortFilter';\n\ntype Props = {\n  sortFilter: SortFilter\n  handleChangeSortFilter: (sort:SortFilter) => void;\n};\n\nexport const Filter: React.FC<Props> = ({\n  sortFilter,\n  handleChangeSortFilter,\n}) => {\n  return (\n    <nav className=\"filter\" data-cy=\"Filter\">\n      <a\n        data-cy=\"FilterLinkAll\"\n        href=\"#/\"\n        className={classNames(\n          'filter__link',\n          { selected: sortFilter === SortFilter.all },\n        )}\n        onClick={() => handleChangeSortFilter(SortFilter.all)}\n      >\n        All\n      </a>\n\n      <a\n        data-cy=\"FilterLinkActive\"\n        href=\"#/active\"\n        className={classNames(\n          'filter__link',\n          { selected: sortFilter === SortFilter.active },\n        )}\n        onClick={() => handleChangeSortFilter(SortFilter.active)}\n      >\n        Active\n      </a>\n      {}\n      <a\n        data-cy=\"FilterLinkCompleted\"\n        href=\"#/completed\"\n        className={classNames(\n          'filter__link',\n          { selected: sortFilter === SortFilter.completed },\n        )}\n        onClick={() => handleChangeSortFilter(SortFilter.completed)}\n      >\n        Completed\n      </a>\n    </nav>\n\n  );\n};\n","// eslint-disable-next-line no-shadow\nexport enum KeySubmit {\n  Enter = 'Enter',\n  Escape = 'Escape',\n}\n","// eslint-disable-next-line no-shadow\nexport enum MessageError {\n  ErrorServerOnStart = 'Todos from server were not gotten',\n  ErrorEmptyTitle = 'Title can\\'t be empty',\n  ErrorServerWhileAdd = 'Unable to add a todo',\n  ErrorServerWhileDelete = 'Unable to delete a todo',\n  ErrorServerWhileUpdate = 'Unable to change a todo',\n}\n","import React, { useRef, useEffect } from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../types/Todo';\n\ntype Props = {\n  todo: Todo;\n  handleUpdate: (todo: Todo) => void;\n  wantChangeTitle: number;\n  setWantChangeTitle: (id: number) => void;\n  changeTodoTitle: string;\n  setChangeTitle: (arg: string) => void;\n  handleKeyChangeTitle: (\n    event:React.KeyboardEvent<HTMLInputElement>,\n    todo: Todo) =>\n  Promise<void>;\n  handleRemoveTodo: (id: number) => void;\n  activeTodoId: number[];\n};\n\nexport const TodoItem: React.FC<Props> = ({\n  todo,\n  handleUpdate,\n  wantChangeTitle,\n  setWantChangeTitle,\n  changeTodoTitle,\n  setChangeTitle,\n  handleKeyChangeTitle,\n  handleRemoveTodo,\n  activeTodoId,\n}) => {\n  const changeTodoField = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (changeTodoField.current) {\n      changeTodoField.current.focus();\n    }\n  }, [wantChangeTitle]);\n\n  const handleBlur = () => {\n    setWantChangeTitle(-1);\n  };\n\n  return (\n    <div\n      data-cy=\"Todo\"\n      key={todo.id}\n      className={classNames(\n        'todo',\n        { completed: todo.completed },\n      )}\n    >\n      <label className=\"todo__status-label\" htmlFor=\"todo-status\">\n        <input\n          id=\"todo-status\"\n          data-cy=\"TodoStatus\"\n          type=\"checkbox\"\n          className=\"todo__status\"\n          checked={todo.completed}\n          onChange={() => handleUpdate(todo)}\n        />\n      </label>\n      {wantChangeTitle === todo.id\n        ? (\n          <form onSubmit={event => event.preventDefault()}>\n            <input\n              data-cy=\"ChangeTodoField\"\n              type=\"text\"\n              ref={changeTodoField}\n              className=\"todoapp__new-todo todoapp__new-todo--change\"\n              placeholder=\"Empty title will be removed\"\n              value={changeTodoTitle}\n              onChange={() => setChangeTitle(\n                changeTodoField.current?.value || '',\n              )}\n              onBlur={handleBlur}\n              onKeyDown={event => handleKeyChangeTitle(event, todo)}\n            />\n          </form>\n        )\n        : (\n          <>\n            <span\n              data-cy=\"TodoTitle\"\n              className=\"todo__title\"\n              onDoubleClick={() => {\n                setWantChangeTitle(todo.id);\n                setChangeTitle(todo.title);\n              }}\n            >\n              {todo.title}\n            </span>\n            <button\n              type=\"button\"\n              className=\"todo__remove\"\n              data-cy=\"TodoDeleteButton\"\n              onClick={() => handleRemoveTodo(todo.id)}\n            >\n              ×\n            </button>\n          </>\n        )}\n      <div\n        data-cy=\"TodoLoader\"\n        className={classNames(\n          'modal',\n          'overlay',\n          { 'is-active': activeTodoId.includes(todo.id) },\n        )}\n      >\n        <div className=\"\n        modal-background\n        has-background-white-ter\"\n        />\n        <div className=\"loader\" />\n      </div>\n    </div>\n  );\n};\n","import React, { useRef } from 'react';\n\ntype Props = {\n  handleSubmit : (event: React.FormEvent) => void;\n  newTodoTitle:string;\n  setTitle:(arg: string) => void\n};\n\nexport const HeaderInputForm: React.FC<Props> = ({\n  handleSubmit,\n  newTodoTitle,\n  setTitle,\n}) => {\n  const newTodoField = useRef<HTMLInputElement>(null);\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        data-cy=\"NewTodoField\"\n        type=\"text\"\n        ref={newTodoField}\n        className=\"todoapp__new-todo\"\n        placeholder=\"What needs to be done?\"\n        value={newTodoTitle}\n        onChange={() => setTitle(newTodoField.current?.value || '')}\n      />\n    </form>\n  );\n};\n","import { Todo } from '../types/Todo';\nimport { client } from '../utils/fetchClient';\n\nexport const getTodos = (userId: number) => {\n  return client.get<Todo[]>(`/todos?userId=${userId}`);\n};\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\ntype createTypeTodo = Omit<Todo, 'id' >;\n\nexport const createTodo\n  = async ({ userId, title, completed }: createTypeTodo) => {\n    return client.post<Todo>('/todos', { userId, title, completed });\n  };\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\ntype deleteTypeTodo = Pick<Todo, 'id' >;\n\nexport const deleteTodo = ({ id }: deleteTypeTodo) => {\n  return client.delete(`/todos/${id}`);\n};\n\nexport const updateTodo = (todoID: number, data: Partial<Todo>) => {\n  return client.patch<Todo>(`/todos/${todoID}`, data);\n};\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React, {\n  useContext, useEffect, useMemo, useRef, useState,\n} from 'react';\nimport classNames from 'classnames';\nimport { AuthContext } from './components/Auth/AuthContext';\nimport { Error } from './components/Error';\nimport { Filter } from './components/Filter';\nimport { TodoItem } from './components/TodoItem';\nimport { HeaderInputForm } from './components/HeaderInputForm';\n\nimport {\n  getTodos, createTodo, deleteTodo, updateTodo,\n} from './api/todos';\nimport { Todo } from './types/Todo';\nimport { SortFilter } from './types/SortFilter';\nimport { KeySubmit } from './types/KeySubmit';\nimport { MessageError } from './types/MessageError';\n\nexport const App: React.FC = () => {\n  const user = useContext(AuthContext);\n  const newTodoField = useRef<HTMLInputElement>(null);\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [sortFilter, setSortFilter] = useState(SortFilter.all);\n  const [visibelTodos, setVisibelTodos] = useState<Todo[]>([...todos]);\n  const [completedTodos, setCompletedTodos]\n    = useState<Todo[]>([...todos].filter(todo => todo.completed));\n\n  const [wantChangeTitle, setWantChangeTitle] = useState(-1);\n  const [isError, setError] = useState(false);\n  const [messageError, setMessageError] = useState('');\n  const [newTodoTitle, setTitle] = useState('');\n  const [changeTodoTitle, setChangeTitle] = useState('');\n  const [activeTodoId, setActiveTodoId] = useState([0]);\n\n  useEffect(() => {\n    if (newTodoField.current) {\n      newTodoField.current.focus();\n    }\n\n    if (user) {\n      getTodos(user.id)\n        .then(response => {\n          setTodos(response);\n        })\n        .catch(() => {\n          setError(true);\n          setMessageError(MessageError.ErrorServerOnStart);\n        });\n    }\n  }, []);\n\n  useMemo(() => {\n    setVisibelTodos(() => (\n      todos.filter(todo => {\n        switch (sortFilter) {\n          case SortFilter.active:\n            return !todo.completed;\n\n          case SortFilter.completed:\n            return todo.completed;\n\n          default:\n            return true;\n        }\n      })));\n  }, [todos, sortFilter]);\n\n  useMemo(() => {\n    setCompletedTodos(() => todos.filter(todo => todo.completed));\n  }, [todos]);\n\n  const handleSubmit = async (event: React.FormEvent) => {\n    event.preventDefault();\n    if (!user) {\n      return;\n    }\n\n    if (newTodoTitle.trim().length === 0) {\n      setError(true);\n      setMessageError(MessageError.ErrorEmptyTitle);\n\n      return;\n    }\n\n    setVisibelTodos(visibleTodos => [...visibleTodos, {\n      id: 0,\n      userId: user.id,\n      title: newTodoTitle,\n      completed: false,\n    }]);\n\n    try {\n      const isAdding = await createTodo({\n        userId: user.id,\n        title: newTodoTitle,\n        completed: false,\n      });\n\n      setTodos(PrevTodos => [...PrevTodos, isAdding]);\n    } catch (errorFromServer) {\n      setError(true);\n      setMessageError('Unable to add a todo');\n    } finally {\n      setVisibelTodos(visibleTodos => visibleTodos\n        .filter(todo => todo.id !== 0));\n    }\n\n    setTitle('');\n  };\n\n  const handleRemoveTodo = async (removeTodoID: number) => {\n    setActiveTodoId(idActive => [...idActive, removeTodoID]);\n\n    try {\n      await deleteTodo({ id: removeTodoID });\n\n      setTodos(Prevtodos => Prevtodos.filter(todo => todo.id !== removeTodoID));\n    } catch (errorFromServer) {\n      setError(true);\n      setMessageError(MessageError.ErrorServerWhileDelete);\n    } finally {\n      setActiveTodoId(idActive => idActive.filter(id => id !== removeTodoID));\n    }\n  };\n\n  const handleRemoveComleted = () => {\n    completedTodos.forEach((todoComleted) => handleRemoveTodo(todoComleted.id));\n  };\n\n  const handleUpdate = async (changeTodo: Todo) => {\n    if (!changeTodo.id) {\n      return;\n    }\n\n    try {\n      setActiveTodoId(idActive => [...idActive, changeTodo.id]);\n      await updateTodo(changeTodo.id, { completed: !changeTodo.completed });\n\n      setTodos(Prevtodos => [...Prevtodos].map(todo => {\n        if (todo.id === changeTodo.id) {\n          // eslint-disable-next-line no-param-reassign\n          todo.completed = !todo.completed;\n        }\n\n        return todo;\n      }));\n    } catch (errorFromServer) {\n      setError(true);\n      setMessageError(MessageError.ErrorServerWhileUpdate);\n    } finally {\n      setActiveTodoId(idActive => idActive.filter(id => id !== changeTodo.id));\n    }\n  };\n\n  const handleUpdateAll = () => {\n    todos.forEach(async changeTodo => {\n      try {\n        setActiveTodoId(idActive => [...idActive, changeTodo.id]);\n        await updateTodo(\n          changeTodo.id,\n          { completed: completedTodos.length !== todos.length },\n        );\n        setTodos(state => [...state].map(todo => {\n          const statusComleted = completedTodos.length !== todos.length;\n\n          // eslint-disable-next-line no-param-reassign\n          todo.completed = statusComleted;\n\n          return todo;\n        }));\n      } catch (errorFromServer) {\n        setError(true);\n        setMessageError(MessageError.ErrorServerWhileUpdate);\n      } finally {\n        setActiveTodoId(idActive => idActive\n          .filter(id => id !== changeTodo.id));\n      }\n    });\n  };\n\n  const handleKeyChangeTitle = async (\n    event: React.KeyboardEvent<HTMLInputElement>,\n    changeTodo: Todo,\n  ) => {\n    if (changeTodoTitle.length > 0 && changeTodoTitle.trim().length === 0) {\n      setError(true);\n      setMessageError('Title can\\'t be empty');\n\n      return;\n    }\n\n    switch (event.key) {\n      case KeySubmit.Enter:\n        if (changeTodoTitle === '') {\n          handleRemoveTodo(changeTodo.id);\n\n          return;\n        }\n\n        try {\n          setActiveTodoId(idActive => [...idActive, changeTodo.id]);\n          await updateTodo(changeTodo.id, { title: changeTodoTitle });\n\n          setTodos(state => [...state].map(todo => {\n            if (todo.id === changeTodo.id) {\n              // eslint-disable-next-line no-param-reassign\n              todo.title = changeTodoTitle;\n            }\n\n            return todo;\n          }));\n        } catch (errorFromServer) {\n          setError(true);\n          setMessageError(MessageError.ErrorServerWhileUpdate);\n        } finally {\n          setActiveTodoId(idActive => idActive\n            .filter(id => id !== changeTodo.id));\n          setWantChangeTitle(-1);\n          setChangeTitle('');\n        }\n\n        break;\n\n      case KeySubmit.Escape:\n        setWantChangeTitle(-1);\n        setChangeTitle('');\n\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleChangeSortFilter = (sort: SortFilter) => {\n    if (sortFilter !== sort) {\n      setSortFilter(sort);\n    }\n  };\n\n  return (\n    <div className=\"todoapp\">\n\n      <h1 className=\"todoapp__title\">todos</h1>\n\n      <div className=\"todoapp__content\">\n        <header className=\"todoapp__header\">\n          {todos.length > 0\n            && (\n              <button\n                data-cy=\"ToggleAllButton\"\n                type=\"button\"\n                className={classNames(\n                  'todoapp__toggle-all',\n                  { active: completedTodos.length === todos.length },\n                )}\n                onClick={handleUpdateAll}\n              />\n            )}\n          <HeaderInputForm\n            handleSubmit={handleSubmit}\n            newTodoTitle={newTodoTitle}\n            setTitle={setTitle}\n          />\n        </header>\n        {todos.length > 0\n          && (\n            <>\n              <section className=\"todoapp__main\" data-cy=\"TodoList\">\n                {visibelTodos.map(todo => (\n                  <TodoItem\n                    key={todo.id}\n                    todo={todo}\n                    handleUpdate={handleUpdate}\n                    wantChangeTitle={wantChangeTitle}\n                    setWantChangeTitle={setWantChangeTitle}\n                    changeTodoTitle={changeTodoTitle}\n                    setChangeTitle={setChangeTitle}\n                    handleKeyChangeTitle={handleKeyChangeTitle}\n                    handleRemoveTodo={handleRemoveTodo}\n                    activeTodoId={activeTodoId}\n                  />\n                ))}\n\n              </section>\n\n              <footer className=\"todoapp__footer\" data-cy=\"Footer\">\n                <span className=\"todo-count\" data-cy=\"todosCounter\">\n                  {`${todos.length - completedTodos.length} items left`}\n                </span>\n\n                <Filter\n                  sortFilter={sortFilter}\n                  handleChangeSortFilter={handleChangeSortFilter}\n                />\n                {completedTodos.length > 0\n                  && (\n                    <button\n                      data-cy=\"ClearCompletedButton\"\n                      type=\"button\"\n                      className=\"todoapp__clear-completed\"\n                      onClick={handleRemoveComleted}\n                    >\n                      Clear completed\n                    </button>\n                  )}\n              </footer>\n            </>\n          )}\n      </div>\n\n      <Error\n        isError={isError}\n        setError={setError}\n        messageError={messageError}\n      />\n\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport React from 'react';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './styles/index.scss';\n\nimport { App } from './App';\nimport { AuthProvider } from './components/Auth/AuthContext';\n\nconst Root = () => (\n  <AuthProvider>\n    <App />\n  </AuthProvider>\n);\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(<Root />);\n"],"sourceRoot":""}